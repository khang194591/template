generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  profiles Profile[]
}

model Profile {
  id Int @id @default(autoincrement())

  email    String   @unique
  fullName String?
  isActive Boolean? @default(false)

  roles Role[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accountId Int?
  account   Account? @relation(fields: [accountId], references: [id])

  creatorId Int?
  creator   Profile?  @relation("CreatorProfile", fields: [creatorId], references: [id])
  created   Profile[] @relation("CreatorProfile")

  updaterId Int?
  updater   Profile?  @relation("UpdaterProfile", fields: [updaterId], references: [id])
  updated   Profile[] @relation("UpdaterProfile")

  token Token?
}

model Token {
  id Int @id @default(autoincrement())

  token     String   @db.Text
  hashToken String
  createdAt DateTime @default(now())

  profileId Int     @unique
  profile   Profile @relation(fields: [profileId], references: [id])
}

model Role {
  id Int @id @default(autoincrement())

  name        String  @unique
  description String?

  profiles    Profile[]
  permissions Permission[]
}

model Permission {
  id Int @id @default(autoincrement())

  action   PermissionAction
  resource PermissionResource

  roles Role[]
}

enum PermissionResource {
  PROFILE
  PERMISSION
  ROLE
}

enum PermissionAction {
  CREATE
  READ
  UPDATE
  DELETE
}
